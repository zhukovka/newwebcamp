<div class="cds_course_intro_wrapper">
  <div class="cds_left_column">
    <div class="cds_sign_up_box">
      <a class="assign_to_course" href="#" rel="#sign_up_form">Записаться</a>
    </div>

    <h3 class="audience_header">Для кого</h3>
    <p>Если вы уже обладаете знаниями и опытом <b>frontend-разработчика в области HTML - CSS</b> и хотите делать современные эффекты с помощью <b>JavaScript</b> то Вам нужно пройти наш <b>курс «JavaScript базовый»</b> и убедиться, что вскоре благодаря нему вы действительно станете лучшим из лучших!
    </p>

    <h3 class="knowledge_header">Вы научитесь</h3>
    <ul>
      <li>Программированию на JavaScript с нуля.</li>
      <li>Работать с DOM элементами HTML.</li>
      <li>Писать сложные функции.</li>
      <li>Эффективно использовать объекты в javascript, в том числе прототипы и наследование.</li>
      <li>Разрабатывать интерактивный онлайн сервис.</li>
    </ul>

    <h3 class="audience_header">Вы не в Киеве</h3>
    <p>Если вы не в Киеве, но все же хотите выучиться и получить работу с достойной оплатой, вас заинтересует обучение для <a href="http://www.webcamp.com.ua/skype-student">Skype-студентов.</a></p>
  </div>

  <div class="cds_right_column">
    <h3 class="knowledge_header">Описание курса</h3>
    <p>Вместе с нашими преподавателями у вас будет возможность глубоко изучить основы JavaScript.</p>
    <p>Стоит сказать и о том, что Frontend разработчик – это, как известно, эксперт в своем сегменте, который имеет ряд навыков из смежных областей. Зачастую, такие эксперты знакомы с HTML и CSS, web-дизайном, а также принципами юзабилити (UI/UX). Ко всему прочему, такие разработчики неплохо ориентируются и в серверных языках и технологиях AJAX. Именно этим специалистом необходимо смотреть на тот или иной проект в общем: и на разметку HTML, и на Javascript, и на PHP. Мы прилагаем максимум усилий, чтобы обучение было не только полезным, но интересным и увлекательным, чтобы вам после завершения занятия хотелось только пойти и выполнить домашнее задание, а после придумать собственный проект.</p>
    <p>Кроме того, что вы отлично проведете время на занятиях, найдете новых друзей, которые также как и вы, стремятся освоить новую, востребованную профессию, в дополнение к приятному, вы получите полезный опыт, и готовый проект в портфолио. Так, к примеру, такие вакансии, как Frontend-разработчик со знанием javascript предлагают кандидатом заработную плату 800-1000$ на начальном уровне. Неужто вы не мечтаете о таком прекрасном карьерном будущем для себя? Наверняка мечтаете! А осуществить такие планы вам  поможет наша команда настоящих профессионалов, которые поделятся всем опытом, помогут, подскажут, научат и дадут толчок. WebCamp – все только для вашего успешного и обеспеченного будущего!</p>
  </div>
</div>
<div class="cds_course_program_wrapper">
  <h3 class="program_header">Программа курса «JavaScript базовый»</h3>

  <div class="cds_left_column">
    <h6> 1. Введение в Javascript </h6>
    <ul class="circle_list_img">
      <li> Что такое Javascript?</li>
      <li> Короткая история Javascript</li>
      <li> Ecmascript</li>
      <li> Версии Javascript</li>
      <li> Другие области использования Javascript</li>
      <li> Альтернативные технологии</li>
      <li> Справочники и спецификации</li>
      <li> Редакторы кода</li>
      <li> Js консоль в браузерах</li>
    </ul>
    <h6> 2. Javascript в HTML</h6>
    <ul class="circle_list_img">
      <li> Теги script и noscript</li>
      <li> Способы подключение Javascript на HTML странице</li>
      <li> Отложенная и асинхронная загрузка скриптов с defer, async</li>
    </ul>
    <h6> 3. Основы Javascript</h6>
    <ul class="circle_list_img">
      <li> Синтаксис</li>
      <li> Переменные и имена переменных</li>
      <li> Объявление и область видимости переменной</li>
      <li> Типы данных</li>
      <li> Основные операторы</li>
      <li> Условные операторы и тернарный оператор</li>
      <li> Операторы сравнения и логические операторы</li>
      <li> Побитовые операторы</li>
      <li> Циклы</li>
      <li> Директивы continue и break. Метки</li>
      <li> Инструкции switch, with</li>
      <li> Функции, аргументы функций, инструкция return</li>
      <li> Strict Mode</li>
    </ul>
    <h6> 4. Структуры данных</h6>
    <ul class="circle_list_img">
     <li> Оператор typeof</li>
     <li> Строки</li>
     <li> Числа</li>
     <li> Логические значения</li>
     <li> Функции</li>
     <li> Объекты</li>
     <li> Массивы</li>
     <li> Значения null и undefined</li>
     <li> Объект Object</li>
     <li> Объект Date</li>
     <li> Объект Math</li>
     <li> Объект Error, инструкция try..catch..finally, понятие Исключения</li>
     <li> Объект RegExp</li>
     <li> Элементарные и ссылочные типы</li>
     <li> Преобразования типов</li>
     <li> Объекты обертки для элементарных типов данных</li>
   </ul>
   <h6> 5. Функции</h6>
   <ul class="circle_list_img">
    <li> Определение и вызов</li>
    <li> Анонимная функция</li>
    <li> Немедленно вызываемая функция</li>
    <li> Паттерн Модуль</li>
    <li> Аргументы. Псевдо-массив arguments</li>
    <li> Именованные аргументы</li>
    <li> Функции как данные</li>
    <li> Функция-конструктор</li>
    <li> Свойства и методы</li>
    <li> Приватные свойства</li>
    <li> Область видимости и замыкания</li>
    <li> Объект this</li>
    <li> Конструктор Function</li>
    <li> Рекурсия</li>
  </ul>
  
  <h6> 6. Объекты и массивы</h6>
  <ul class="circle_list_img">
   <li> Создание объектов</li>
   <li> Свойства и методы объектов</li>
   <li> Объекты как ассоциативные массивы</li>
   <li> Свои объекты с помощью функции Конструктора</li>
   <li> Создание массивов</li>
   <li> Чтение и запись элементов массива</li>
   <li> Методы массива</li>
   <li> Объекты, подобные массивам</li>
   <li> Формат JSON</li>
 </ul>
</div>
<div class="cds_right_column">
 <h6> 7. Таймеры</h6>
 <ul class="circle_list_img">
  <li> setTimeout</li>
  <li> setInterval</li>
  <li> setImmediate</li>
</ul>
<h6> 8. Объектная модель браузера (BOM)</h6>
<ul class="circle_list_img">
  <li> Объект Window</li>
  <li> Диалоговые окна - confirm, alert, prompt</li>
  <li> Объект Location</li>
  <li> Объект Navigator</li>
  <li> Объект Screen</li>
  <li> Объект History</li>
  <li> Объект Frames</li>
</ul>
<h6> 9. Объектная модель документа (DOM)</h6>
<ul class="circle_list_img">
  <li> Объект Document</li>
  <li> Элементы DOM: их свойства и методы</li>
  <li> Дерево DOM. Узел DOM</li>
  <li> Родительско-дочерние отношения узлов</li>
  <li> Свойства узлов</li>
  <li> Атрибуты и "свои" свойства</li>
  <li> Поиск элементов</li>
  <li> Selectors API</li>
  <li> Модификация элементов</li>
  <li> Добавление содержимого в документ</li>
  <li> Удаление узлов</li>
  <li> Мультивставка с insertAdjacentHTML и createDocumentFragment</li>
  <li> Метод document.write</li>
</ul>
<h6> 10. Javascript и CSS</h6>
<ul class="circle_list_img">
  <li> Свойства CSS</li>
  <li> CSS-анимация</li>
  <li> JS-Анимация</li>
  <li> Кривые Безье</li>
</ul>
<h6> 11. Внешний вид: стили, прокрутка, координаты</h6>
<ul class="circle_list_img">
  <li> Размеры и прокрутка элементов</li>
  <li> Размеры и прокрутка для страницы</li>
  <li> Координаты</li>
</ul>
<h6> 12. События</h6>
<ul class="circle_list_img">
  <li> Базовая обработка событий</li>
  <li> Объект события</li>
  <li> Обработка событий в модели DOM Level 2 (всплытие и перехват)</li>
  <li> Особенности обработки событий в IE</li>
  <li> Действия браузера по умолчанию</li>
  <li> Делегирование</li>
  <li> События мыши</li>
  <li> События клавиатуры</li>
  <li> События onload, onDOMContentLoaded, onerror</li>
  <li> Основы Drag'n'Drop</li>
  <li> Свои события</li>
</ul>
<h6> 13. Формы</h6>
<ul class="circle_list_img">
  <li> Объект forms</li>
  <li> Свойства элементов формы</li>
  <li> События change, input</li>
  <li> События blur, focus</li>
  <li> Событие scroll</li>
</ul>
<h6> 14. Cookies</h6>
<ul class="circle_list_img">
  <li> Что это такое и зачем нужно</li>
  <li> Сохранение</li>
  <li> Чтение</li>
  <li> Альтернативы в HTML5</li>
</ul>
</div>